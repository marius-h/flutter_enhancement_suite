<?xml version="1.0" encoding="UTF-8"?>
<templateSet group="Flutter">

    <!--    Material Package Import-->
    <template name="fimpmat"
              value="import 'package:flutter/material.dart';"
              description="Import the Material package"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    Cupertino Package Import-->
    <template name="fimpcup"
              value="import 'package:flutter/cupertino.dart';"
              description="Import the Cupertino package"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    Subject-->
    <template name="fsubj"
              value="final _$NAME$Subject = BehaviorSubject&lt;$TYPE$&gt;();&#10;Stream&lt;$TYPE$&gt; get $NAME$ =&gt; _$NAME$Subject.stream;"
              description="New BehaviorSubject with Stream"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="NAME"
                  expression="&quot;NAME&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="TYPE"
                  expression="&quot;TYPE&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    HookWidget-->
    <template name="hook"
              value="class $NAME$ extends HookWidget {&#10;  const $NAME$({Key? key}) : super(key: key);&#10;  &#10;  @override&#10;  Widget build(BuildContext context) {&#10;    $END$&#10;  }&#10;}"
              description="New Hook widget"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="NAME"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <template name="uAnim"
              value="useAnimation&lt;$T$&gt;($animation$)"
              description="New useAnimation function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="T"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="animation"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uAnimCont"
              value="useAnimationController({&#10;  $duration$, &#10;  debugLabel, &#10;  initialValue: 0, &#10;  lowerBound: 0, &#10;  upperBound: 1, &#10;  vsync, &#10;  animationBehavior: AnimationBehavior.normal, &#10;  keys, &#10;}) "
              description="New useAnimationController function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="duration"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uContext"
              value="useContext()"
              description="New useContext function"
              toReformat="false"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uEffect"
              value="useEffect(() {&#10;  $END$&#10;})"
              description="New useEffect function"
              toReformat="false"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uFuture"
              value="useFuture($future$)"
              description="New useFuture function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="future"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uListenable"
              value="useListenable($listenable$)"
              description="New useListenable function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="listenable"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uMem"
              value="useMemoized(() {&#10;  $END$&#10;})"
              description="New useMemoized function"
              toReformat="false"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uState"
              value="useState($initialData$)"
              description="New useState function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="initialData"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uStream"
              value="useStream($stream$)"
              description="New useStream function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="stream"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uValChanged"
              value="useValueChanged($value$, (oldValue, oldResult) {&#10;  $END$      &#10;})"
              description="New useValueChanged function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="value"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uValListenable"
              value="useValueListenable($valueListenable$)"
              description="New useValueListenable function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="valueListenable"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <template name="uValNotifier"
              value="useValueNotifier($initialData$)"
              description="New useValueNotifier function"
              toReformat="false"
              toShortenFQNames="true">
        <variable name="initialData"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    AnimatedBuilder-->
    <template name="fanimbuilder"
              value="AnimatedBuilder(&#10;  animation: $animationController$,&#10;  child: $childWidget$,&#10;  builder: (BuildContext context, Widget child) {&#10;    return $buildWidget$;&#10;  },&#10;)$END$"
              description="New AnimatedBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="animationController"
                  expression="&quot;animationController&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="childWidget"
                  expression="&quot;childWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="buildWidget"
                  expression="&quot;buildWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    AspectRatio-->
    <template name="faspratio"
              value="AspectRatio(&#10;  aspectRatio: $aspectRatio$,&#10;  child: $child$,&#10;)$END$"
              description="New AspectRatio widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="aspectRatio"
                  expression="&quot;aspectRatio&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="child"
                  expression="&quot;child&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Center-->
    <template name="fcent"
              value="Center(child: $child$)$END$"
              description="New Center widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="child"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Column-->
    <template name="fcol"
              value="Column(&#10;  children: &lt;Widget&gt;[&#10;    $children$&#10;  ],&#10;)$END$"
              description="New Column widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="children"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Container-->
    <template name="fcont"
              value="Container(&#10;  child: $child$,&#10;)$END$"
              description="New Container widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="child"
                  expression="&quot;child&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    CustomClipper-->
    <template name="fcustomclipper"
              value="class $name$Clipper extends CustomClipper&lt;Path&gt; {&#10;    &#10;  @override&#10;  Path getClip(Size size) {&#10;    // TODO: implement getClip&#10;  }&#10;&#10;  @override&#10;  bool shouldReclip(CustomClipper&lt;Path&gt; oldClipper) {&#10;    // TODO: implement shouldReclip&#10;  }&#10;}"
              description="Create a CustomClipper widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="name"
                  expression="&quot;name&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    CustomPainter-->
    <template name="fcustompainter"
              value="class $name$Painter extends CustomPainter {&#10;&#10;  @override&#10;  void paint(Canvas canvas, Size size) {&#10;    // TODO: implement paint&#10;  }&#10;  &#10;  @override&#10;  bool shouldRepaint($name$Painter oldDelegate) {&#10;    // TODO: implement shouldRepaint&#10;  }&#10;  &#10;  @override&#10;  bool shouldRebuildSemantics($name$Painter oldDelegate) {&#10;    // TODO: implement shouldRebuildSemantics&#10;  }&#10;}"
              description="Create a CustomPainter widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="name"
                  expression="&quot;name&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    CustomScrollView-->
    <template name="fcustomscroll"
              value="CustomScrollView(&#10;  slivers: &lt;Widget&gt;[&#10;    $childWidget$,&#10;  ],&#10;)$END$"
              description="New CustomScrollView widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="childWidget"
                  expression="&quot;childWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.all-->
    <template name="finall"
              value="EdgeInsets.all($value$)$END$"
              description="New EdgeInsets.all widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="value"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.only-->
    <template name="finonly"
              value="EdgeInsets.only($value$)$END$"
              description="New EdgeInsets.only widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="value"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.symmetric-->
    <template name="finsym"
              value="EdgeInsets.symmetric(vertical: $vertical$, horizontal: $horizontal$)$END$"
              description="New EdgeInsets.symmetric widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="vertical"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="horizontal"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.symmetric (horizontal)-->
    <template name="finsym"
              value="EdgeInsets.symmetric(horizontal: $horizontal$)$END$"
              description="New EdgeInsets.symmetric horizontally widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="horizontal"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.symmetric (vertical)-->
    <template name="finsym"
              value="EdgeInsets.symmetric(vertical: $vertical$)$END$"
              description="New EdgeInsets.symmetric vertically widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="vertical"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Expanded-->
    <template name="fexp"
              value="Expanded(child: $child$)$END$"
              description="New Expanded widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="child"
                  expression="&quot;null&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    FutureBuilder-->
    <template name="ffuturebuilder"
              value="FutureBuilder(&#10;  future: $FUTURE$,&#10;  initialData: $INITIAL$,&#10;  builder: (BuildContext context, AsyncSnapshot snapshot) {&#10;    if (snapshot.hasData) {&#10;      if (snapshot.data != null) {&#10;        return $WIDGET$;&#10;      } else {&#10;        return CircularProgressIndicator();&#10;      }&#10;    }&#10;  }  &#10;),"
              description="New FutureBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="FUTURE"
                  expression="&quot;future&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="INITIAL"
                  expression="&quot;initialValue&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="WIDGET"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Icon-->
    <template name="ficon"
              value="Icon($iconGroup$.$iconName$)$END$"
              description="New Icon widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="iconGroup"
                  expression="&quot;Icons&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="iconName"
                  expression="&quot;clear&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    LayoutBuilder-->
    <template name="flayoutbuilder"
              value="LayoutBuilder(&#10;  builder: (BuildContext context, BoxConstraints constraints) {&#10;    return $widget$;&#10;  },&#10;)$END$"
              description="New LayoutBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="widget"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    ListView.builder-->
    <template name="flistvbuilder"
              value="ListView.builder(&#10;  itemCount: $COUNT$,&#10;  itemBuilder: (BuildContext context, int index) {&#10;    return $WIDGET$;&#10;  },&#10;)$END$"
              description="New ListView.builder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="COUNT"
                  expression="&quot;future&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="WIDGET"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    OrientationBuilder-->
    <template name="forientbuilder"
              value="OrientationBuilder(&#10;  builder: (BuildContext context, Orientation orientation) {&#10;    return GridView.count(&#10;      // Create a grid with 2 columns in portrait mode&#10;      // or 3 columns in landscape mode.&#10;      crossAxisCount: orientation == Orientation.portrait ? 2 : 3,&#10;    );&#10;  },&#10;);"
              description="New OrientationBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Row-->
    <template name="frow"
              value="Row(&#10;  children: &lt;Widget&gt;[&#10;    $children$&#10;  ],&#10;)"
              description="New Row widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="children"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold-->
    <template name="fscaffold"
              value="Scaffold(&#10;  body: $body$,&#10;)$END$"
              description="New Scaffold widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="body"
                  expression="&quot;bodyWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar-->
    <template name="fscaffoldab"
              value="Scaffold(&#10;  appBar: AppBar(&#10;    title: Text('$appbarTitle$'),&#10;  ),&#10;  body: $body$&#10;)$END$"
              description="New Scaffold widget with AppBar"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="body"
                  expression="&quot;bodyWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar and Bottom Nav Bar-->
    <template name="fscaffoldabbn"
              value="int _index = 0; // TODO: make sure this is outside build(), otherwise every setState will change the value back to 0 &#10;&#10;Scaffold(&#10;  appBar: AppBar(&#10;    title: Text('$appbarTitle$'),&#10;  ),&#10;  body: Center(&#10;    child: Container(&#10;      child: Text('You are looking at the message for bottom navigation item $_index'),&#10;    ),&#10;  ),&#10;  bottomNavigationBar: BottomNavigationBar(&#10;    onTap: (tappedItemIndex) =&gt; setState(() {&#10;      _index = tappedItemIndex;&#10;    }),&#10;    currentIndex: _index,&#10;    items: [&#10;      BottomNavigationBarItem(icon: Icon(Icons.av_timer), title: Text('$navBarItem1Text$')),&#10;      BottomNavigationBarItem(icon: Icon(Icons.add), title: Text('$navBarItem2Text$'))&#10;    ],&#10;  ),&#10;)$END$"
              description="New Scaffold widget with AppBar &amp; Bottom Nav Bar"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem1Text"
                  expression="&quot;navBarItem1Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem2Text"
                  expression="&quot;navBarItem2Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar and Fab-->
    <template name="fscaffoldabfab"
              value="int _index = 0; // TODO: make sure this is outside build(), otherwise every setState will chage the value back to 0 &#10;&#10;Scaffold(&#10;  appBar: AppBar(&#10;    title: Text('$appbarTitle$'),&#10;  ),&#10;  body: Center(&#10;    child: Container(&#10;      child: Text('You tapped the FAB $_index times'),&#10;    ),&#10;  ),&#10;  floatingActionButton: FloatingActionButton(&#10;    onPressed: () =&gt; setState(() {&#10;      _index++;&#10;    }),&#10;    tooltip: 'Increment Counter',&#10;    child: Icon(Icons.add),&#10;  ),&#10;  floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,&#10;)$END$"
              description="New Scaffold widget with AppBar and Fab"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar, Fab and Bottom Nav Bar-->
    <template name="fscaffoldall"
              value="int _index = 0; // TODO: make sure this is outside build(), otherwise every setState will chage the value back to 0 &#10;&#10;Scaffold(&#10;  appBar: AppBar(&#10;    title: Text('$appbarTitle$'),&#10;  ),&#10;  body: Center(&#10;    child: Container(&#10;      child: Text('You are looking at the message for bottom navigation item $_index'),&#10;    ),&#10;  ),&#10;  bottomNavigationBar: BottomNavigationBar(&#10;    onTap: (tappedItemIndex) =&gt; setState(() {&#10;      _index = tappedItemIndex;&#10;    }),&#10;    currentIndex: _index,&#10;    items: [&#10;      BottomNavigationBarItem(icon: Icon(Icons.av_timer), title: Text('$navBarItem1Text$')),&#10;      BottomNavigationBarItem(icon: Icon(Icons.add), title: Text('$navBarItem2Text$'))&#10;    ],&#10;  ),&#10;  floatingActionButton: FloatingActionButton(&#10;    child: Icon(Icons.clear),&#10;    onPressed: () =&gt; setState(() {&#10;      _index = 0;&#10;    }),&#10;    tooltip: 'Reset Navigation Index',&#10;  ),&#10;  floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,&#10;)$END$"
              description="New Scaffold widget with AppBar, Fab and Bottom Nav Bar"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem1Text"
                  expression="&quot;navBarItem1Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem2Text"
                  expression="&quot;navBarItem2Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    showDialog-->
    <template name="fdialog"
              value="showDialog&lt;void&gt;(&#10;  context: $context$,&#10;  barrierDismissible: $dismiss$, // false = user must tap button, true = tap outside dialog&#10;  builder: (BuildContext dialogContext) {&#10;    return AlertDialog(&#10;      title: Text('$title$'),&#10;      content: Text('$content$'),&#10;      actions: &lt;Widget&gt;[&#10;        FlatButton(&#10;          child: Text('$buttonText$'),&#10;          onPressed: () {&#10;            Navigator.of(dialogContext).pop(); // Dismiss alert dialog&#10;          },&#10;        ),&#10;      ],&#10;    );&#10;  },&#10;);"
              description="New Dialog widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="context"
                  expression="&quot;context&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="dismiss"
                  expression="&quot;barrierDismissible&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="title"
                  expression="&quot;title&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="content"
                  expression="&quot;dialogBody&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="buttonText"
                  expression="&quot;buttonText&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SingleChildScrollView-->
    <template name="fsinglechildsc"
              value="SingleChildScrollView(&#10;  controller: $controller$, // Optional&#10;  child: $widget$,&#10;)$END$"
              description="New SingleChildScrollView widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="controller"
                  expression="&quot;controller&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="widget"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SizedBox -->
    <template name="fsb"
              value="SizedBox(width: $width$, height: $height$)$END$"
              description="New SizedBox widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="width"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="height"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SizedBox (height)-->
    <template name="fsbh"
              value="SizedBox(height: $height$)$END$"
              description="New SizedBox by height widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="height"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SizedBox (width)-->
    <template name="fsbw"
              value="SizedBox(width: $width$)$END$"
              description="New SizedBox by width widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="width"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    StatefulBuilder-->
    <template name="fstfulbuilder"
              value="StatefulBuilder(&#10;  builder: (BuildContext context, StateSetter setState) {&#10;    return $widget$&#10;  },&#10;)$END$"
              description="New StatefulBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="widget"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    StreamBuilder-->
    <template name="fstreambuilder"
              value="StreamBuilder(&#10;  stream: $STREAM$, &#10;  builder: (BuildContext context, AsyncSnapshot snapshot) {&#10;    if(snapshot.hasError) {&#10;      return $ERRORWIDGET$; &#10;    }  &#10;    switch (snapshot.connectionState) {&#10;      case ConnectionState.none: &#10;        return $DEFAULTWIDGET$;&#10;      case ConnectionState.waiting: &#10;        return $LOADINGWIDGET$;&#10;      case ConnectionState.active: &#10;        return $ACTIVEWIDGET$;&#10;      case ConnectionState.done: &#10;        return $FINISHEDWIDGET$;&#10;    }&#10;    return null;&#10;  },&#10;),"
              description="New StreamBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="STREAM"
                  expression="&quot;stream&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="ERRORWIDGET"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="DEFAULTWIDGET"
                  expression="&quot;ConnectionNone&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="LOADINGWIDGET"
                  expression="&quot;ConnectionWaiting&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="ACTIVEWIDGET"
                  expression="&quot;ConnectionActive&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="FINISHEDWIDGET"
                  expression="&quot;ConnectionDone&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Text-->
    <template name="ftext"
              value="Text('$text$')"
              description="New Text widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="text"
                  expression="&quot;text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>


    <!--    MediaQuery by width-->
    <template name="fmedqw"
              value="MediaQuery.of(context).size.width"
              description="New MediaQuery by width widget"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    MediaQuery by height-->
    <template name="fmedqh"
              value="MediaQuery.of(context).size.height"
              description="New MediaQuery by height widget"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

</templateSet>
